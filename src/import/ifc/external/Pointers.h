#pragma once

#ifndef IMPORT_IFC_EXTERNAL_POINTERS_H_
#define IMPORT_IFC_EXTERNAL_POINTERS_H_

namespace ifc {

using IfcActionRequest = internal::IfcActionRequest*;
using IfcActor = internal::IfcActor*;
using IfcActorRole = internal::IfcActorRole*;
using IfcActuator = internal::IfcActuator*;
using IfcActuatorType = internal::IfcActuatorType*;
using IfcAddress = internal::IfcAddress*;
using IfcAdvancedBrep = internal::IfcAdvancedBrep*;
using IfcAdvancedBrepWithVoids = internal::IfcAdvancedBrepWithVoids*;
using IfcAdvancedFace = internal::IfcAdvancedFace*;
using IfcAirTerminal = internal::IfcAirTerminal*;
using IfcAirTerminalBox = internal::IfcAirTerminalBox*;
using IfcAirTerminalBoxType = internal::IfcAirTerminalBoxType*;
using IfcAirTerminalType = internal::IfcAirTerminalType*;
using IfcAirToAirHeatRecovery = internal::IfcAirToAirHeatRecovery*;
using IfcAirToAirHeatRecoveryType = internal::IfcAirToAirHeatRecoveryType*;
using IfcAlarm = internal::IfcAlarm*;
using IfcAlarmType = internal::IfcAlarmType*;
using IfcAlignment = internal::IfcAlignment*;
using IfcAlignment2DHorizontal = internal::IfcAlignment2DHorizontal*;
using IfcAlignment2DHorizontalSegment = internal::IfcAlignment2DHorizontalSegment*;
using IfcAlignment2DSegment = internal::IfcAlignment2DSegment*;
using IfcAlignment2DVerSegCircularArc = internal::IfcAlignment2DVerSegCircularArc*;
using IfcAlignment2DVerSegLine = internal::IfcAlignment2DVerSegLine*;
using IfcAlignment2DVerSegParabolicArc = internal::IfcAlignment2DVerSegParabolicArc*;
using IfcAlignment2DVertical = internal::IfcAlignment2DVertical*;
using IfcAlignment2DVerticalSegment = internal::IfcAlignment2DVerticalSegment*;
using IfcAlignmentCurve = internal::IfcAlignmentCurve*;
using IfcAnnotation = internal::IfcAnnotation*;
using IfcAnnotationFillArea = internal::IfcAnnotationFillArea*;
using IfcApplication = internal::IfcApplication*;
using IfcAppliedValue = internal::IfcAppliedValue*;
using IfcApproval = internal::IfcApproval*;
using IfcApprovalRelationship = internal::IfcApprovalRelationship*;
using IfcArbitraryClosedProfileDef = internal::IfcArbitraryClosedProfileDef*;
using IfcArbitraryOpenProfileDef = internal::IfcArbitraryOpenProfileDef*;
using IfcArbitraryProfileDefWithVoids = internal::IfcArbitraryProfileDefWithVoids*;
using IfcAsset = internal::IfcAsset*;
using IfcAsymmetricIShapeProfileDef = internal::IfcAsymmetricIShapeProfileDef*;
using IfcAudioVisualAppliance = internal::IfcAudioVisualAppliance*;
using IfcAudioVisualApplianceType = internal::IfcAudioVisualApplianceType*;
using IfcAxis1Placement = internal::IfcAxis1Placement*;
using IfcAxis2Placement2D = internal::IfcAxis2Placement2D*;
using IfcAxis2Placement3D = internal::IfcAxis2Placement3D*;
using IfcBSplineCurve = internal::IfcBSplineCurve*;
using IfcBSplineCurveWithKnots = internal::IfcBSplineCurveWithKnots*;
using IfcBSplineSurface = internal::IfcBSplineSurface*;
using IfcBSplineSurfaceWithKnots = internal::IfcBSplineSurfaceWithKnots*;
using IfcBeam = internal::IfcBeam*;
using IfcBeamStandardCase = internal::IfcBeamStandardCase*;
using IfcBeamType = internal::IfcBeamType*;
using IfcBlobTexture = internal::IfcBlobTexture*;
using IfcBlock = internal::IfcBlock*;
using IfcBoiler = internal::IfcBoiler*;
using IfcBoilerType = internal::IfcBoilerType*;
using IfcBooleanClippingResult = internal::IfcBooleanClippingResult*;
using IfcBooleanResult = internal::IfcBooleanResult*;
using IfcBoundaryCondition = internal::IfcBoundaryCondition*;
using IfcBoundaryCurve = internal::IfcBoundaryCurve*;
using IfcBoundaryEdgeCondition = internal::IfcBoundaryEdgeCondition*;
using IfcBoundaryFaceCondition = internal::IfcBoundaryFaceCondition*;
using IfcBoundaryNodeCondition = internal::IfcBoundaryNodeCondition*;
using IfcBoundaryNodeConditionWarping = internal::IfcBoundaryNodeConditionWarping*;
using IfcBoundedCurve = internal::IfcBoundedCurve*;
using IfcBoundedSurface = internal::IfcBoundedSurface*;
using IfcBoundingBox = internal::IfcBoundingBox*;
using IfcBoxedHalfSpace = internal::IfcBoxedHalfSpace*;
using IfcBuilding = internal::IfcBuilding*;
using IfcBuildingElement = internal::IfcBuildingElement*;
using IfcBuildingElementPart = internal::IfcBuildingElementPart*;
using IfcBuildingElementPartType = internal::IfcBuildingElementPartType*;
using IfcBuildingElementProxy = internal::IfcBuildingElementProxy*;
using IfcBuildingElementProxyType = internal::IfcBuildingElementProxyType*;
using IfcBuildingElementType = internal::IfcBuildingElementType*;
using IfcBuildingStorey = internal::IfcBuildingStorey*;
using IfcBuildingSystem = internal::IfcBuildingSystem*;
using IfcBurner = internal::IfcBurner*;
using IfcBurnerType = internal::IfcBurnerType*;
using IfcCShapeProfileDef = internal::IfcCShapeProfileDef*;
using IfcCableCarrierFitting = internal::IfcCableCarrierFitting*;
using IfcCableCarrierFittingType = internal::IfcCableCarrierFittingType*;
using IfcCableCarrierSegment = internal::IfcCableCarrierSegment*;
using IfcCableCarrierSegmentType = internal::IfcCableCarrierSegmentType*;
using IfcCableFitting = internal::IfcCableFitting*;
using IfcCableFittingType = internal::IfcCableFittingType*;
using IfcCableSegment = internal::IfcCableSegment*;
using IfcCableSegmentType = internal::IfcCableSegmentType*;
using IfcCartesianPoint = internal::IfcCartesianPoint*;
using IfcCartesianPointList = internal::IfcCartesianPointList*;
using IfcCartesianPointList2D = internal::IfcCartesianPointList2D*;
using IfcCartesianPointList3D = internal::IfcCartesianPointList3D*;
using IfcCartesianTransformationOperator = internal::IfcCartesianTransformationOperator*;
using IfcCartesianTransformationOperator2D = internal::IfcCartesianTransformationOperator2D*;
using IfcCartesianTransformationOperator2DnonUniform =
    internal::IfcCartesianTransformationOperator2DnonUniform*;
using IfcCartesianTransformationOperator3D = internal::IfcCartesianTransformationOperator3D*;
using IfcCartesianTransformationOperator3DnonUniform =
    internal::IfcCartesianTransformationOperator3DnonUniform*;
using IfcCenterLineProfileDef = internal::IfcCenterLineProfileDef*;
using IfcChiller = internal::IfcChiller*;
using IfcChillerType = internal::IfcChillerType*;
using IfcChimney = internal::IfcChimney*;
using IfcChimneyType = internal::IfcChimneyType*;
using IfcCircle = internal::IfcCircle*;
using IfcCircleHollowProfileDef = internal::IfcCircleHollowProfileDef*;
using IfcCircleProfileDef = internal::IfcCircleProfileDef*;
using IfcCircularArcSegment2D = internal::IfcCircularArcSegment2D*;
using IfcCivilElement = internal::IfcCivilElement*;
using IfcCivilElementType = internal::IfcCivilElementType*;
using IfcClassification = internal::IfcClassification*;
using IfcClassificationReference = internal::IfcClassificationReference*;
using IfcClosedShell = internal::IfcClosedShell*;
using IfcCoil = internal::IfcCoil*;
using IfcCoilType = internal::IfcCoilType*;
using IfcColourRgb = internal::IfcColourRgb*;
using IfcColourRgbList = internal::IfcColourRgbList*;
using IfcColourSpecification = internal::IfcColourSpecification*;
using IfcColumn = internal::IfcColumn*;
using IfcColumnStandardCase = internal::IfcColumnStandardCase*;
using IfcColumnType = internal::IfcColumnType*;
using IfcCommunicationsAppliance = internal::IfcCommunicationsAppliance*;
using IfcCommunicationsApplianceType = internal::IfcCommunicationsApplianceType*;
using IfcComplexProperty = internal::IfcComplexProperty*;
using IfcComplexPropertyTemplate = internal::IfcComplexPropertyTemplate*;
using IfcCompositeCurve = internal::IfcCompositeCurve*;
using IfcCompositeCurveOnSurface = internal::IfcCompositeCurveOnSurface*;
using IfcCompositeCurveSegment = internal::IfcCompositeCurveSegment*;
using IfcCompositeProfileDef = internal::IfcCompositeProfileDef*;
using IfcCompressor = internal::IfcCompressor*;
using IfcCompressorType = internal::IfcCompressorType*;
using IfcCondenser = internal::IfcCondenser*;
using IfcCondenserType = internal::IfcCondenserType*;
using IfcConic = internal::IfcConic*;
using IfcConnectedFaceSet = internal::IfcConnectedFaceSet*;
using IfcConnectionCurveGeometry = internal::IfcConnectionCurveGeometry*;
using IfcConnectionGeometry = internal::IfcConnectionGeometry*;
using IfcConnectionPointEccentricity = internal::IfcConnectionPointEccentricity*;
using IfcConnectionPointGeometry = internal::IfcConnectionPointGeometry*;
using IfcConnectionSurfaceGeometry = internal::IfcConnectionSurfaceGeometry*;
using IfcConnectionVolumeGeometry = internal::IfcConnectionVolumeGeometry*;
using IfcConstraint = internal::IfcConstraint*;
using IfcConstructionEquipmentResource = internal::IfcConstructionEquipmentResource*;
using IfcConstructionEquipmentResourceType = internal::IfcConstructionEquipmentResourceType*;
using IfcConstructionMaterialResource = internal::IfcConstructionMaterialResource*;
using IfcConstructionMaterialResourceType = internal::IfcConstructionMaterialResourceType*;
using IfcConstructionProductResource = internal::IfcConstructionProductResource*;
using IfcConstructionProductResourceType = internal::IfcConstructionProductResourceType*;
using IfcConstructionResource = internal::IfcConstructionResource*;
using IfcConstructionResourceType = internal::IfcConstructionResourceType*;
using IfcContext = internal::IfcContext*;
using IfcContextDependentUnit = internal::IfcContextDependentUnit*;
using IfcControl = internal::IfcControl*;
using IfcController = internal::IfcController*;
using IfcControllerType = internal::IfcControllerType*;
using IfcConversionBasedUnit = internal::IfcConversionBasedUnit*;
using IfcConversionBasedUnitWithOffset = internal::IfcConversionBasedUnitWithOffset*;
using IfcCooledBeam = internal::IfcCooledBeam*;
using IfcCooledBeamType = internal::IfcCooledBeamType*;
using IfcCoolingTower = internal::IfcCoolingTower*;
using IfcCoolingTowerType = internal::IfcCoolingTowerType*;
using IfcCoordinateOperation = internal::IfcCoordinateOperation*;
using IfcCoordinateReferenceSystem = internal::IfcCoordinateReferenceSystem*;
using IfcCostItem = internal::IfcCostItem*;
using IfcCostSchedule = internal::IfcCostSchedule*;
using IfcCostValue = internal::IfcCostValue*;
using IfcCovering = internal::IfcCovering*;
using IfcCoveringType = internal::IfcCoveringType*;
using IfcCrewResource = internal::IfcCrewResource*;
using IfcCrewResourceType = internal::IfcCrewResourceType*;
using IfcCsgPrimitive3D = internal::IfcCsgPrimitive3D*;
using IfcCsgSolid = internal::IfcCsgSolid*;
using IfcCurrencyRelationship = internal::IfcCurrencyRelationship*;
using IfcCurtainWall = internal::IfcCurtainWall*;
using IfcCurtainWallType = internal::IfcCurtainWallType*;
using IfcCurve = internal::IfcCurve*;
using IfcCurveBoundedPlane = internal::IfcCurveBoundedPlane*;
using IfcCurveBoundedSurface = internal::IfcCurveBoundedSurface*;
using IfcCurveSegment2D = internal::IfcCurveSegment2D*;
using IfcCurveStyle = internal::IfcCurveStyle*;
using IfcCurveStyleFont = internal::IfcCurveStyleFont*;
using IfcCurveStyleFontAndScaling = internal::IfcCurveStyleFontAndScaling*;
using IfcCurveStyleFontPattern = internal::IfcCurveStyleFontPattern*;
using IfcCylindricalSurface = internal::IfcCylindricalSurface*;
using IfcDamper = internal::IfcDamper*;
using IfcDamperType = internal::IfcDamperType*;
using IfcDerivedProfileDef = internal::IfcDerivedProfileDef*;
using IfcDerivedUnit = internal::IfcDerivedUnit*;
using IfcDerivedUnitElement = internal::IfcDerivedUnitElement*;
using IfcDimensionalExponents = internal::IfcDimensionalExponents*;
using IfcDirection = internal::IfcDirection*;
using IfcDiscreteAccessory = internal::IfcDiscreteAccessory*;
using IfcDiscreteAccessoryType = internal::IfcDiscreteAccessoryType*;
using IfcDistanceExpression = internal::IfcDistanceExpression*;
using IfcDistributionChamberElement = internal::IfcDistributionChamberElement*;
using IfcDistributionChamberElementType = internal::IfcDistributionChamberElementType*;
using IfcDistributionCircuit = internal::IfcDistributionCircuit*;
using IfcDistributionControlElement = internal::IfcDistributionControlElement*;
using IfcDistributionControlElementType = internal::IfcDistributionControlElementType*;
using IfcDistributionElement = internal::IfcDistributionElement*;
using IfcDistributionElementType = internal::IfcDistributionElementType*;
using IfcDistributionFlowElement = internal::IfcDistributionFlowElement*;
using IfcDistributionFlowElementType = internal::IfcDistributionFlowElementType*;
using IfcDistributionPort = internal::IfcDistributionPort*;
using IfcDistributionSystem = internal::IfcDistributionSystem*;
using IfcDocumentInformation = internal::IfcDocumentInformation*;
using IfcDocumentInformationRelationship = internal::IfcDocumentInformationRelationship*;
using IfcDocumentReference = internal::IfcDocumentReference*;
using IfcDoor = internal::IfcDoor*;
using IfcDoorLiningProperties = internal::IfcDoorLiningProperties*;
using IfcDoorPanelProperties = internal::IfcDoorPanelProperties*;
using IfcDoorStandardCase = internal::IfcDoorStandardCase*;
using IfcDoorStyle = internal::IfcDoorStyle*;
using IfcDoorType = internal::IfcDoorType*;
using IfcDraughtingPreDefinedColour = internal::IfcDraughtingPreDefinedColour*;
using IfcDraughtingPreDefinedCurveFont = internal::IfcDraughtingPreDefinedCurveFont*;
using IfcDuctFitting = internal::IfcDuctFitting*;
using IfcDuctFittingType = internal::IfcDuctFittingType*;
using IfcDuctSegment = internal::IfcDuctSegment*;
using IfcDuctSegmentType = internal::IfcDuctSegmentType*;
using IfcDuctSilencer = internal::IfcDuctSilencer*;
using IfcDuctSilencerType = internal::IfcDuctSilencerType*;
using IfcEdge = internal::IfcEdge*;
using IfcEdgeCurve = internal::IfcEdgeCurve*;
using IfcEdgeLoop = internal::IfcEdgeLoop*;
using IfcElectricAppliance = internal::IfcElectricAppliance*;
using IfcElectricApplianceType = internal::IfcElectricApplianceType*;
using IfcElectricDistributionBoard = internal::IfcElectricDistributionBoard*;
using IfcElectricDistributionBoardType = internal::IfcElectricDistributionBoardType*;
using IfcElectricFlowStorageDevice = internal::IfcElectricFlowStorageDevice*;
using IfcElectricFlowStorageDeviceType = internal::IfcElectricFlowStorageDeviceType*;
using IfcElectricGenerator = internal::IfcElectricGenerator*;
using IfcElectricGeneratorType = internal::IfcElectricGeneratorType*;
using IfcElectricMotor = internal::IfcElectricMotor*;
using IfcElectricMotorType = internal::IfcElectricMotorType*;
using IfcElectricTimeControl = internal::IfcElectricTimeControl*;
using IfcElectricTimeControlType = internal::IfcElectricTimeControlType*;
using IfcElement = internal::IfcElement*;
using IfcElementAssembly = internal::IfcElementAssembly*;
using IfcElementAssemblyType = internal::IfcElementAssemblyType*;
using IfcElementComponent = internal::IfcElementComponent*;
using IfcElementComponentType = internal::IfcElementComponentType*;
using IfcElementQuantity = internal::IfcElementQuantity*;
using IfcElementType = internal::IfcElementType*;
using IfcElementarySurface = internal::IfcElementarySurface*;
using IfcEllipse = internal::IfcEllipse*;
using IfcEllipseProfileDef = internal::IfcEllipseProfileDef*;
using IfcEnergyConversionDevice = internal::IfcEnergyConversionDevice*;
using IfcEnergyConversionDeviceType = internal::IfcEnergyConversionDeviceType*;
using IfcEngine = internal::IfcEngine*;
using IfcEngineType = internal::IfcEngineType*;
using IfcEvaporativeCooler = internal::IfcEvaporativeCooler*;
using IfcEvaporativeCoolerType = internal::IfcEvaporativeCoolerType*;
using IfcEvaporator = internal::IfcEvaporator*;
using IfcEvaporatorType = internal::IfcEvaporatorType*;
using IfcEvent = internal::IfcEvent*;
using IfcEventTime = internal::IfcEventTime*;
using IfcEventType = internal::IfcEventType*;
using IfcExtendedProperties = internal::IfcExtendedProperties*;
using IfcExternalInformation = internal::IfcExternalInformation*;
using IfcExternalReference = internal::IfcExternalReference*;
using IfcExternalReferenceRelationship = internal::IfcExternalReferenceRelationship*;
using IfcExternalSpatialElement = internal::IfcExternalSpatialElement*;
using IfcExternalSpatialStructureElement = internal::IfcExternalSpatialStructureElement*;
using IfcExternallyDefinedHatchStyle = internal::IfcExternallyDefinedHatchStyle*;
using IfcExternallyDefinedSurfaceStyle = internal::IfcExternallyDefinedSurfaceStyle*;
using IfcExternallyDefinedTextFont = internal::IfcExternallyDefinedTextFont*;
using IfcExtrudedAreaSolid = internal::IfcExtrudedAreaSolid*;
using IfcExtrudedAreaSolidTapered = internal::IfcExtrudedAreaSolidTapered*;
using IfcFace = internal::IfcFace*;
using IfcFaceBasedSurfaceModel = internal::IfcFaceBasedSurfaceModel*;
using IfcFaceBound = internal::IfcFaceBound*;
using IfcFaceOuterBound = internal::IfcFaceOuterBound*;
using IfcFaceSurface = internal::IfcFaceSurface*;
using IfcFacetedBrep = internal::IfcFacetedBrep*;
using IfcFacetedBrepWithVoids = internal::IfcFacetedBrepWithVoids*;
using IfcFailureConnectionCondition = internal::IfcFailureConnectionCondition*;
using IfcFan = internal::IfcFan*;
using IfcFanType = internal::IfcFanType*;
using IfcFastener = internal::IfcFastener*;
using IfcFastenerType = internal::IfcFastenerType*;
using IfcFeatureElement = internal::IfcFeatureElement*;
using IfcFeatureElementAddition = internal::IfcFeatureElementAddition*;
using IfcFeatureElementSubtraction = internal::IfcFeatureElementSubtraction*;
using IfcFillAreaStyle = internal::IfcFillAreaStyle*;
using IfcFillAreaStyleHatching = internal::IfcFillAreaStyleHatching*;
using IfcFillAreaStyleTiles = internal::IfcFillAreaStyleTiles*;
using IfcFilter = internal::IfcFilter*;
using IfcFilterType = internal::IfcFilterType*;
using IfcFireSuppressionTerminal = internal::IfcFireSuppressionTerminal*;
using IfcFireSuppressionTerminalType = internal::IfcFireSuppressionTerminalType*;
using IfcFixedReferenceSweptAreaSolid = internal::IfcFixedReferenceSweptAreaSolid*;
using IfcFlowController = internal::IfcFlowController*;
using IfcFlowControllerType = internal::IfcFlowControllerType*;
using IfcFlowFitting = internal::IfcFlowFitting*;
using IfcFlowFittingType = internal::IfcFlowFittingType*;
using IfcFlowInstrument = internal::IfcFlowInstrument*;
using IfcFlowInstrumentType = internal::IfcFlowInstrumentType*;
using IfcFlowMeter = internal::IfcFlowMeter*;
using IfcFlowMeterType = internal::IfcFlowMeterType*;
using IfcFlowMovingDevice = internal::IfcFlowMovingDevice*;
using IfcFlowMovingDeviceType = internal::IfcFlowMovingDeviceType*;
using IfcFlowSegment = internal::IfcFlowSegment*;
using IfcFlowSegmentType = internal::IfcFlowSegmentType*;
using IfcFlowStorageDevice = internal::IfcFlowStorageDevice*;
using IfcFlowStorageDeviceType = internal::IfcFlowStorageDeviceType*;
using IfcFlowTerminal = internal::IfcFlowTerminal*;
using IfcFlowTerminalType = internal::IfcFlowTerminalType*;
using IfcFlowTreatmentDevice = internal::IfcFlowTreatmentDevice*;
using IfcFlowTreatmentDeviceType = internal::IfcFlowTreatmentDeviceType*;
using IfcFooting = internal::IfcFooting*;
using IfcFootingType = internal::IfcFootingType*;
using IfcFurnishingElement = internal::IfcFurnishingElement*;
using IfcFurnishingElementType = internal::IfcFurnishingElementType*;
using IfcFurniture = internal::IfcFurniture*;
using IfcFurnitureType = internal::IfcFurnitureType*;
using IfcGeographicElement = internal::IfcGeographicElement*;
using IfcGeographicElementType = internal::IfcGeographicElementType*;
using IfcGeometricCurveSet = internal::IfcGeometricCurveSet*;
using IfcGeometricRepresentationContext = internal::IfcGeometricRepresentationContext*;
using IfcGeometricRepresentationItem = internal::IfcGeometricRepresentationItem*;
using IfcGeometricRepresentationSubContext = internal::IfcGeometricRepresentationSubContext*;
using IfcGeometricSet = internal::IfcGeometricSet*;
using IfcGrid = internal::IfcGrid*;
using IfcGridAxis = internal::IfcGridAxis*;
using IfcGridPlacement = internal::IfcGridPlacement*;
using IfcGroup = internal::IfcGroup*;
using IfcHalfSpaceSolid = internal::IfcHalfSpaceSolid*;
using IfcHeatExchanger = internal::IfcHeatExchanger*;
using IfcHeatExchangerType = internal::IfcHeatExchangerType*;
using IfcHumidifier = internal::IfcHumidifier*;
using IfcHumidifierType = internal::IfcHumidifierType*;
using IfcIShapeProfileDef = internal::IfcIShapeProfileDef*;
using IfcImageTexture = internal::IfcImageTexture*;
using IfcIndexedColourMap = internal::IfcIndexedColourMap*;
using IfcIndexedPolyCurve = internal::IfcIndexedPolyCurve*;
using IfcIndexedPolygonalFace = internal::IfcIndexedPolygonalFace*;
using IfcIndexedPolygonalFaceWithVoids = internal::IfcIndexedPolygonalFaceWithVoids*;
using IfcIndexedTextureMap = internal::IfcIndexedTextureMap*;
using IfcIndexedTriangleTextureMap = internal::IfcIndexedTriangleTextureMap*;
using IfcInterceptor = internal::IfcInterceptor*;
using IfcInterceptorType = internal::IfcInterceptorType*;
using IfcIntersectionCurve = internal::IfcIntersectionCurve*;
using IfcInventory = internal::IfcInventory*;
using IfcIrregularTimeSeries = internal::IfcIrregularTimeSeries*;
using IfcIrregularTimeSeriesValue = internal::IfcIrregularTimeSeriesValue*;
using IfcJunctionBox = internal::IfcJunctionBox*;
using IfcJunctionBoxType = internal::IfcJunctionBoxType*;
using IfcLShapeProfileDef = internal::IfcLShapeProfileDef*;
using IfcLaborResource = internal::IfcLaborResource*;
using IfcLaborResourceType = internal::IfcLaborResourceType*;
using IfcLagTime = internal::IfcLagTime*;
using IfcLamp = internal::IfcLamp*;
using IfcLampType = internal::IfcLampType*;
using IfcLibraryInformation = internal::IfcLibraryInformation*;
using IfcLibraryReference = internal::IfcLibraryReference*;
using IfcLightDistributionData = internal::IfcLightDistributionData*;
using IfcLightFixture = internal::IfcLightFixture*;
using IfcLightFixtureType = internal::IfcLightFixtureType*;
using IfcLightIntensityDistribution = internal::IfcLightIntensityDistribution*;
using IfcLightSource = internal::IfcLightSource*;
using IfcLightSourceAmbient = internal::IfcLightSourceAmbient*;
using IfcLightSourceDirectional = internal::IfcLightSourceDirectional*;
using IfcLightSourceGoniometric = internal::IfcLightSourceGoniometric*;
using IfcLightSourcePositional = internal::IfcLightSourcePositional*;
using IfcLightSourceSpot = internal::IfcLightSourceSpot*;
using IfcLine = internal::IfcLine*;
using IfcLineSegment2D = internal::IfcLineSegment2D*;
using IfcLinearPlacement = internal::IfcLinearPlacement*;
using IfcLinearPositioningElement = internal::IfcLinearPositioningElement*;
using IfcLocalPlacement = internal::IfcLocalPlacement*;
using IfcLoop = internal::IfcLoop*;
using IfcManifoldSolidBrep = internal::IfcManifoldSolidBrep*;
using IfcMapConversion = internal::IfcMapConversion*;
using IfcMappedItem = internal::IfcMappedItem*;
using IfcMaterial = internal::IfcMaterial*;
using IfcMaterialClassificationRelationship = internal::IfcMaterialClassificationRelationship*;
using IfcMaterialConstituent = internal::IfcMaterialConstituent*;
using IfcMaterialConstituentSet = internal::IfcMaterialConstituentSet*;
using IfcMaterialDefinition = internal::IfcMaterialDefinition*;
using IfcMaterialDefinitionRepresentation = internal::IfcMaterialDefinitionRepresentation*;
using IfcMaterialLayer = internal::IfcMaterialLayer*;
using IfcMaterialLayerSet = internal::IfcMaterialLayerSet*;
using IfcMaterialLayerSetUsage = internal::IfcMaterialLayerSetUsage*;
using IfcMaterialLayerWithOffsets = internal::IfcMaterialLayerWithOffsets*;
using IfcMaterialList = internal::IfcMaterialList*;
using IfcMaterialProfile = internal::IfcMaterialProfile*;
using IfcMaterialProfileSet = internal::IfcMaterialProfileSet*;
using IfcMaterialProfileSetUsage = internal::IfcMaterialProfileSetUsage*;
using IfcMaterialProfileSetUsageTapering = internal::IfcMaterialProfileSetUsageTapering*;
using IfcMaterialProfileWithOffsets = internal::IfcMaterialProfileWithOffsets*;
using IfcMaterialProperties = internal::IfcMaterialProperties*;
using IfcMaterialRelationship = internal::IfcMaterialRelationship*;
using IfcMaterialUsageDefinition = internal::IfcMaterialUsageDefinition*;
using IfcMeasureWithUnit = internal::IfcMeasureWithUnit*;
using IfcMechanicalFastener = internal::IfcMechanicalFastener*;
using IfcMechanicalFastenerType = internal::IfcMechanicalFastenerType*;
using IfcMedicalDevice = internal::IfcMedicalDevice*;
using IfcMedicalDeviceType = internal::IfcMedicalDeviceType*;
using IfcMember = internal::IfcMember*;
using IfcMemberStandardCase = internal::IfcMemberStandardCase*;
using IfcMemberType = internal::IfcMemberType*;
using IfcMetric = internal::IfcMetric*;
using IfcMirroredProfileDef = internal::IfcMirroredProfileDef*;
using IfcMonetaryUnit = internal::IfcMonetaryUnit*;
using IfcMotorConnection = internal::IfcMotorConnection*;
using IfcMotorConnectionType = internal::IfcMotorConnectionType*;
using IfcNamedUnit = internal::IfcNamedUnit*;
using IfcObject = internal::IfcObject*;
using IfcObjectDefinition = internal::IfcObjectDefinition*;
using IfcObjectPlacement = internal::IfcObjectPlacement*;
using IfcObjective = internal::IfcObjective*;
using IfcOccupant = internal::IfcOccupant*;
using IfcOffsetCurve = internal::IfcOffsetCurve*;
using IfcOffsetCurve2D = internal::IfcOffsetCurve2D*;
using IfcOffsetCurve3D = internal::IfcOffsetCurve3D*;
using IfcOffsetCurveByDistances = internal::IfcOffsetCurveByDistances*;
using IfcOpenShell = internal::IfcOpenShell*;
using IfcOpeningElement = internal::IfcOpeningElement*;
using IfcOpeningStandardCase = internal::IfcOpeningStandardCase*;
using IfcOrganization = internal::IfcOrganization*;
using IfcOrganizationRelationship = internal::IfcOrganizationRelationship*;
using IfcOrientationExpression = internal::IfcOrientationExpression*;
using IfcOrientedEdge = internal::IfcOrientedEdge*;
using IfcOuterBoundaryCurve = internal::IfcOuterBoundaryCurve*;
using IfcOutlet = internal::IfcOutlet*;
using IfcOutletType = internal::IfcOutletType*;
using IfcOwnerHistory = internal::IfcOwnerHistory*;
using IfcParameterizedProfileDef = internal::IfcParameterizedProfileDef*;
using IfcPath = internal::IfcPath*;
using IfcPcurve = internal::IfcPcurve*;
using IfcPerformanceHistory = internal::IfcPerformanceHistory*;
using IfcPermeableCoveringProperties = internal::IfcPermeableCoveringProperties*;
using IfcPermit = internal::IfcPermit*;
using IfcPerson = internal::IfcPerson*;
using IfcPersonAndOrganization = internal::IfcPersonAndOrganization*;
using IfcPhysicalComplexQuantity = internal::IfcPhysicalComplexQuantity*;
using IfcPhysicalQuantity = internal::IfcPhysicalQuantity*;
using IfcPhysicalSimpleQuantity = internal::IfcPhysicalSimpleQuantity*;
using IfcPile = internal::IfcPile*;
using IfcPileType = internal::IfcPileType*;
using IfcPipeFitting = internal::IfcPipeFitting*;
using IfcPipeFittingType = internal::IfcPipeFittingType*;
using IfcPipeSegment = internal::IfcPipeSegment*;
using IfcPipeSegmentType = internal::IfcPipeSegmentType*;
using IfcPixelTexture = internal::IfcPixelTexture*;
using IfcPlacement = internal::IfcPlacement*;
using IfcPlanarBox = internal::IfcPlanarBox*;
using IfcPlanarExtent = internal::IfcPlanarExtent*;
using IfcPlane = internal::IfcPlane*;
using IfcPlate = internal::IfcPlate*;
using IfcPlateStandardCase = internal::IfcPlateStandardCase*;
using IfcPlateType = internal::IfcPlateType*;
using IfcPoint = internal::IfcPoint*;
using IfcPointOnCurve = internal::IfcPointOnCurve*;
using IfcPointOnSurface = internal::IfcPointOnSurface*;
using IfcPolyLoop = internal::IfcPolyLoop*;
using IfcPolygonalBoundedHalfSpace = internal::IfcPolygonalBoundedHalfSpace*;
using IfcPolygonalFaceSet = internal::IfcPolygonalFaceSet*;
using IfcPolyline = internal::IfcPolyline*;
using IfcPort = internal::IfcPort*;
using IfcPositioningElement = internal::IfcPositioningElement*;
using IfcPostalAddress = internal::IfcPostalAddress*;
using IfcPreDefinedColour = internal::IfcPreDefinedColour*;
using IfcPreDefinedCurveFont = internal::IfcPreDefinedCurveFont*;
using IfcPreDefinedItem = internal::IfcPreDefinedItem*;
using IfcPreDefinedProperties = internal::IfcPreDefinedProperties*;
using IfcPreDefinedPropertySet = internal::IfcPreDefinedPropertySet*;
using IfcPreDefinedTextFont = internal::IfcPreDefinedTextFont*;
using IfcPresentationItem = internal::IfcPresentationItem*;
using IfcPresentationLayerAssignment = internal::IfcPresentationLayerAssignment*;
using IfcPresentationLayerWithStyle = internal::IfcPresentationLayerWithStyle*;
using IfcPresentationStyle = internal::IfcPresentationStyle*;
using IfcPresentationStyleAssignment = internal::IfcPresentationStyleAssignment*;
using IfcProcedure = internal::IfcProcedure*;
using IfcProcedureType = internal::IfcProcedureType*;
using IfcProcess = internal::IfcProcess*;
using IfcProduct = internal::IfcProduct*;
using IfcProductDefinitionShape = internal::IfcProductDefinitionShape*;
using IfcProductRepresentation = internal::IfcProductRepresentation*;
using IfcProfileDef = internal::IfcProfileDef*;
using IfcProfileProperties = internal::IfcProfileProperties*;
using IfcProject = internal::IfcProject*;
using IfcProjectLibrary = internal::IfcProjectLibrary*;
using IfcProjectOrder = internal::IfcProjectOrder*;
using IfcProjectedCRS = internal::IfcProjectedCRS*;
using IfcProjectionElement = internal::IfcProjectionElement*;
using IfcProperty = internal::IfcProperty*;
using IfcPropertyAbstraction = internal::IfcPropertyAbstraction*;
using IfcPropertyBoundedValue = internal::IfcPropertyBoundedValue*;
using IfcPropertyDefinition = internal::IfcPropertyDefinition*;
using IfcPropertyDependencyRelationship = internal::IfcPropertyDependencyRelationship*;
using IfcPropertyEnumeratedValue = internal::IfcPropertyEnumeratedValue*;
using IfcPropertyEnumeration = internal::IfcPropertyEnumeration*;
using IfcPropertyListValue = internal::IfcPropertyListValue*;
using IfcPropertyReferenceValue = internal::IfcPropertyReferenceValue*;
using IfcPropertySet = internal::IfcPropertySet*;
using IfcPropertySetDefinition = internal::IfcPropertySetDefinition*;
using IfcPropertySetTemplate = internal::IfcPropertySetTemplate*;
using IfcPropertySingleValue = internal::IfcPropertySingleValue*;
using IfcPropertyTableValue = internal::IfcPropertyTableValue*;
using IfcPropertyTemplate = internal::IfcPropertyTemplate*;
using IfcPropertyTemplateDefinition = internal::IfcPropertyTemplateDefinition*;
using IfcProtectiveDevice = internal::IfcProtectiveDevice*;
using IfcProtectiveDeviceTrippingUnit = internal::IfcProtectiveDeviceTrippingUnit*;
using IfcProtectiveDeviceTrippingUnitType = internal::IfcProtectiveDeviceTrippingUnitType*;
using IfcProtectiveDeviceType = internal::IfcProtectiveDeviceType*;
using IfcProxy = internal::IfcProxy*;
using IfcPump = internal::IfcPump*;
using IfcPumpType = internal::IfcPumpType*;
using IfcQuantityArea = internal::IfcQuantityArea*;
using IfcQuantityCount = internal::IfcQuantityCount*;
using IfcQuantityLength = internal::IfcQuantityLength*;
using IfcQuantitySet = internal::IfcQuantitySet*;
using IfcQuantityTime = internal::IfcQuantityTime*;
using IfcQuantityVolume = internal::IfcQuantityVolume*;
using IfcQuantityWeight = internal::IfcQuantityWeight*;
using IfcRailing = internal::IfcRailing*;
using IfcRailingType = internal::IfcRailingType*;
using IfcRamp = internal::IfcRamp*;
using IfcRampFlight = internal::IfcRampFlight*;
using IfcRampFlightType = internal::IfcRampFlightType*;
using IfcRampType = internal::IfcRampType*;
using IfcRationalBSplineCurveWithKnots = internal::IfcRationalBSplineCurveWithKnots*;
using IfcRationalBSplineSurfaceWithKnots = internal::IfcRationalBSplineSurfaceWithKnots*;
using IfcRectangleHollowProfileDef = internal::IfcRectangleHollowProfileDef*;
using IfcRectangleProfileDef = internal::IfcRectangleProfileDef*;
using IfcRectangularPyramid = internal::IfcRectangularPyramid*;
using IfcRectangularTrimmedSurface = internal::IfcRectangularTrimmedSurface*;
using IfcRecurrencePattern = internal::IfcRecurrencePattern*;
using IfcReference = internal::IfcReference*;
using IfcReferent = internal::IfcReferent*;
using IfcRegularTimeSeries = internal::IfcRegularTimeSeries*;
using IfcReinforcementBarProperties = internal::IfcReinforcementBarProperties*;
using IfcReinforcementDefinitionProperties = internal::IfcReinforcementDefinitionProperties*;
using IfcReinforcingBar = internal::IfcReinforcingBar*;
using IfcReinforcingBarType = internal::IfcReinforcingBarType*;
using IfcReinforcingElement = internal::IfcReinforcingElement*;
using IfcReinforcingElementType = internal::IfcReinforcingElementType*;
using IfcReinforcingMesh = internal::IfcReinforcingMesh*;
using IfcReinforcingMeshType = internal::IfcReinforcingMeshType*;
using IfcRelAggregates = internal::IfcRelAggregates*;
using IfcRelAssigns = internal::IfcRelAssigns*;
using IfcRelAssignsToActor = internal::IfcRelAssignsToActor*;
using IfcRelAssignsToControl = internal::IfcRelAssignsToControl*;
using IfcRelAssignsToGroup = internal::IfcRelAssignsToGroup*;
using IfcRelAssignsToGroupByFactor = internal::IfcRelAssignsToGroupByFactor*;
using IfcRelAssignsToProcess = internal::IfcRelAssignsToProcess*;
using IfcRelAssignsToProduct = internal::IfcRelAssignsToProduct*;
using IfcRelAssignsToResource = internal::IfcRelAssignsToResource*;
using IfcRelAssociates = internal::IfcRelAssociates*;
using IfcRelAssociatesApproval = internal::IfcRelAssociatesApproval*;
using IfcRelAssociatesClassification = internal::IfcRelAssociatesClassification*;
using IfcRelAssociatesConstraint = internal::IfcRelAssociatesConstraint*;
using IfcRelAssociatesDocument = internal::IfcRelAssociatesDocument*;
using IfcRelAssociatesLibrary = internal::IfcRelAssociatesLibrary*;
using IfcRelAssociatesMaterial = internal::IfcRelAssociatesMaterial*;
using IfcRelConnects = internal::IfcRelConnects*;
using IfcRelConnectsElements = internal::IfcRelConnectsElements*;
using IfcRelConnectsPathElements = internal::IfcRelConnectsPathElements*;
using IfcRelConnectsPortToElement = internal::IfcRelConnectsPortToElement*;
using IfcRelConnectsPorts = internal::IfcRelConnectsPorts*;
using IfcRelConnectsStructuralActivity = internal::IfcRelConnectsStructuralActivity*;
using IfcRelConnectsStructuralMember = internal::IfcRelConnectsStructuralMember*;
using IfcRelConnectsWithEccentricity = internal::IfcRelConnectsWithEccentricity*;
using IfcRelConnectsWithRealizingElements = internal::IfcRelConnectsWithRealizingElements*;
using IfcRelContainedInSpatialStructure = internal::IfcRelContainedInSpatialStructure*;
using IfcRelCoversBldgElements = internal::IfcRelCoversBldgElements*;
using IfcRelCoversSpaces = internal::IfcRelCoversSpaces*;
using IfcRelDeclares = internal::IfcRelDeclares*;
using IfcRelDecomposes = internal::IfcRelDecomposes*;
using IfcRelDefines = internal::IfcRelDefines*;
using IfcRelDefinesByObject = internal::IfcRelDefinesByObject*;
using IfcRelDefinesByProperties = internal::IfcRelDefinesByProperties*;
using IfcRelDefinesByTemplate = internal::IfcRelDefinesByTemplate*;
using IfcRelDefinesByType = internal::IfcRelDefinesByType*;
using IfcRelFillsElement = internal::IfcRelFillsElement*;
using IfcRelFlowControlElements = internal::IfcRelFlowControlElements*;
using IfcRelInterferesElements = internal::IfcRelInterferesElements*;
using IfcRelNests = internal::IfcRelNests*;
using IfcRelProjectsElement = internal::IfcRelProjectsElement*;
using IfcRelReferencedInSpatialStructure = internal::IfcRelReferencedInSpatialStructure*;
using IfcRelSequence = internal::IfcRelSequence*;
using IfcRelServicesBuildings = internal::IfcRelServicesBuildings*;
using IfcRelSpaceBoundary = internal::IfcRelSpaceBoundary*;
using IfcRelSpaceBoundary1stLevel = internal::IfcRelSpaceBoundary1stLevel*;
using IfcRelSpaceBoundary2ndLevel = internal::IfcRelSpaceBoundary2ndLevel*;
using IfcRelVoidsElement = internal::IfcRelVoidsElement*;
using IfcRelationship = internal::IfcRelationship*;
using IfcReparametrisedCompositeCurveSegment = internal::IfcReparametrisedCompositeCurveSegment*;
using IfcRepresentation = internal::IfcRepresentation*;
using IfcRepresentationContext = internal::IfcRepresentationContext*;
using IfcRepresentationItem = internal::IfcRepresentationItem*;
using IfcRepresentationMap = internal::IfcRepresentationMap*;
using IfcResource = internal::IfcResource*;
using IfcResourceApprovalRelationship = internal::IfcResourceApprovalRelationship*;
using IfcResourceConstraintRelationship = internal::IfcResourceConstraintRelationship*;
using IfcResourceLevelRelationship = internal::IfcResourceLevelRelationship*;
using IfcResourceTime = internal::IfcResourceTime*;
using IfcRevolvedAreaSolid = internal::IfcRevolvedAreaSolid*;
using IfcRevolvedAreaSolidTapered = internal::IfcRevolvedAreaSolidTapered*;
using IfcRightCircularCone = internal::IfcRightCircularCone*;
using IfcRightCircularCylinder = internal::IfcRightCircularCylinder*;
using IfcRoof = internal::IfcRoof*;
using IfcRoofType = internal::IfcRoofType*;
using IfcRoot = internal::IfcRoot*;
using IfcRoundedRectangleProfileDef = internal::IfcRoundedRectangleProfileDef*;
using IfcSIUnit = internal::IfcSIUnit*;
using IfcSanitaryTerminal = internal::IfcSanitaryTerminal*;
using IfcSanitaryTerminalType = internal::IfcSanitaryTerminalType*;
using IfcSchedulingTime = internal::IfcSchedulingTime*;
using IfcSeamCurve = internal::IfcSeamCurve*;
using IfcSectionProperties = internal::IfcSectionProperties*;
using IfcSectionReinforcementProperties = internal::IfcSectionReinforcementProperties*;
using IfcSectionedSolid = internal::IfcSectionedSolid*;
using IfcSectionedSolidHorizontal = internal::IfcSectionedSolidHorizontal*;
using IfcSectionedSpine = internal::IfcSectionedSpine*;
using IfcSensor = internal::IfcSensor*;
using IfcSensorType = internal::IfcSensorType*;
using IfcShadingDevice = internal::IfcShadingDevice*;
using IfcShadingDeviceType = internal::IfcShadingDeviceType*;
using IfcShapeAspect = internal::IfcShapeAspect*;
using IfcShapeModel = internal::IfcShapeModel*;
using IfcShapeRepresentation = internal::IfcShapeRepresentation*;
using IfcShellBasedSurfaceModel = internal::IfcShellBasedSurfaceModel*;
using IfcSimpleProperty = internal::IfcSimpleProperty*;
using IfcSimplePropertyTemplate = internal::IfcSimplePropertyTemplate*;
using IfcSite = internal::IfcSite*;
using IfcSlab = internal::IfcSlab*;
using IfcSlabElementedCase = internal::IfcSlabElementedCase*;
using IfcSlabStandardCase = internal::IfcSlabStandardCase*;
using IfcSlabType = internal::IfcSlabType*;
using IfcSlippageConnectionCondition = internal::IfcSlippageConnectionCondition*;
using IfcSolarDevice = internal::IfcSolarDevice*;
using IfcSolarDeviceType = internal::IfcSolarDeviceType*;
using IfcSolidModel = internal::IfcSolidModel*;
using IfcSpace = internal::IfcSpace*;
using IfcSpaceHeater = internal::IfcSpaceHeater*;
using IfcSpaceHeaterType = internal::IfcSpaceHeaterType*;
using IfcSpaceType = internal::IfcSpaceType*;
using IfcSpatialElement = internal::IfcSpatialElement*;
using IfcSpatialElementType = internal::IfcSpatialElementType*;
using IfcSpatialStructureElement = internal::IfcSpatialStructureElement*;
using IfcSpatialStructureElementType = internal::IfcSpatialStructureElementType*;
using IfcSpatialZone = internal::IfcSpatialZone*;
using IfcSpatialZoneType = internal::IfcSpatialZoneType*;
using IfcSphere = internal::IfcSphere*;
using IfcSphericalSurface = internal::IfcSphericalSurface*;
using IfcStackTerminal = internal::IfcStackTerminal*;
using IfcStackTerminalType = internal::IfcStackTerminalType*;
using IfcStair = internal::IfcStair*;
using IfcStairFlight = internal::IfcStairFlight*;
using IfcStairFlightType = internal::IfcStairFlightType*;
using IfcStairType = internal::IfcStairType*;
using IfcStructuralAction = internal::IfcStructuralAction*;
using IfcStructuralActivity = internal::IfcStructuralActivity*;
using IfcStructuralAnalysisModel = internal::IfcStructuralAnalysisModel*;
using IfcStructuralConnection = internal::IfcStructuralConnection*;
using IfcStructuralConnectionCondition = internal::IfcStructuralConnectionCondition*;
using IfcStructuralCurveAction = internal::IfcStructuralCurveAction*;
using IfcStructuralCurveConnection = internal::IfcStructuralCurveConnection*;
using IfcStructuralCurveMember = internal::IfcStructuralCurveMember*;
using IfcStructuralCurveMemberVarying = internal::IfcStructuralCurveMemberVarying*;
using IfcStructuralCurveReaction = internal::IfcStructuralCurveReaction*;
using IfcStructuralItem = internal::IfcStructuralItem*;
using IfcStructuralLinearAction = internal::IfcStructuralLinearAction*;
using IfcStructuralLoad = internal::IfcStructuralLoad*;
using IfcStructuralLoadCase = internal::IfcStructuralLoadCase*;
using IfcStructuralLoadConfiguration = internal::IfcStructuralLoadConfiguration*;
using IfcStructuralLoadGroup = internal::IfcStructuralLoadGroup*;
using IfcStructuralLoadLinearForce = internal::IfcStructuralLoadLinearForce*;
using IfcStructuralLoadOrResult = internal::IfcStructuralLoadOrResult*;
using IfcStructuralLoadPlanarForce = internal::IfcStructuralLoadPlanarForce*;
using IfcStructuralLoadSingleDisplacement = internal::IfcStructuralLoadSingleDisplacement*;
using IfcStructuralLoadSingleDisplacementDistortion =
    internal::IfcStructuralLoadSingleDisplacementDistortion*;
using IfcStructuralLoadSingleForce = internal::IfcStructuralLoadSingleForce*;
using IfcStructuralLoadSingleForceWarping = internal::IfcStructuralLoadSingleForceWarping*;
using IfcStructuralLoadStatic = internal::IfcStructuralLoadStatic*;
using IfcStructuralLoadTemperature = internal::IfcStructuralLoadTemperature*;
using IfcStructuralMember = internal::IfcStructuralMember*;
using IfcStructuralPlanarAction = internal::IfcStructuralPlanarAction*;
using IfcStructuralPointAction = internal::IfcStructuralPointAction*;
using IfcStructuralPointConnection = internal::IfcStructuralPointConnection*;
using IfcStructuralPointReaction = internal::IfcStructuralPointReaction*;
using IfcStructuralReaction = internal::IfcStructuralReaction*;
using IfcStructuralResultGroup = internal::IfcStructuralResultGroup*;
using IfcStructuralSurfaceAction = internal::IfcStructuralSurfaceAction*;
using IfcStructuralSurfaceConnection = internal::IfcStructuralSurfaceConnection*;
using IfcStructuralSurfaceMember = internal::IfcStructuralSurfaceMember*;
using IfcStructuralSurfaceMemberVarying = internal::IfcStructuralSurfaceMemberVarying*;
using IfcStructuralSurfaceReaction = internal::IfcStructuralSurfaceReaction*;
using IfcStyleModel = internal::IfcStyleModel*;
using IfcStyledItem = internal::IfcStyledItem*;
using IfcStyledRepresentation = internal::IfcStyledRepresentation*;
using IfcSubContractResource = internal::IfcSubContractResource*;
using IfcSubContractResourceType = internal::IfcSubContractResourceType*;
using IfcSubedge = internal::IfcSubedge*;
using IfcSurface = internal::IfcSurface*;
using IfcSurfaceCurve = internal::IfcSurfaceCurve*;
using IfcSurfaceCurveSweptAreaSolid = internal::IfcSurfaceCurveSweptAreaSolid*;
using IfcSurfaceFeature = internal::IfcSurfaceFeature*;
using IfcSurfaceOfLinearExtrusion = internal::IfcSurfaceOfLinearExtrusion*;
using IfcSurfaceOfRevolution = internal::IfcSurfaceOfRevolution*;
using IfcSurfaceReinforcementArea = internal::IfcSurfaceReinforcementArea*;
using IfcSurfaceStyle = internal::IfcSurfaceStyle*;
using IfcSurfaceStyleLighting = internal::IfcSurfaceStyleLighting*;
using IfcSurfaceStyleRefraction = internal::IfcSurfaceStyleRefraction*;
using IfcSurfaceStyleRendering = internal::IfcSurfaceStyleRendering*;
using IfcSurfaceStyleShading = internal::IfcSurfaceStyleShading*;
using IfcSurfaceStyleWithTextures = internal::IfcSurfaceStyleWithTextures*;
using IfcSurfaceTexture = internal::IfcSurfaceTexture*;
using IfcSweptAreaSolid = internal::IfcSweptAreaSolid*;
using IfcSweptDiskSolid = internal::IfcSweptDiskSolid*;
using IfcSweptDiskSolidPolygonal = internal::IfcSweptDiskSolidPolygonal*;
using IfcSweptSurface = internal::IfcSweptSurface*;
using IfcSwitchingDevice = internal::IfcSwitchingDevice*;
using IfcSwitchingDeviceType = internal::IfcSwitchingDeviceType*;
using IfcSystem = internal::IfcSystem*;
using IfcSystemFurnitureElement = internal::IfcSystemFurnitureElement*;
using IfcSystemFurnitureElementType = internal::IfcSystemFurnitureElementType*;
using IfcTShapeProfileDef = internal::IfcTShapeProfileDef*;
using IfcTable = internal::IfcTable*;
using IfcTableColumn = internal::IfcTableColumn*;
using IfcTableRow = internal::IfcTableRow*;
using IfcTank = internal::IfcTank*;
using IfcTankType = internal::IfcTankType*;
using IfcTask = internal::IfcTask*;
using IfcTaskTime = internal::IfcTaskTime*;
using IfcTaskTimeRecurring = internal::IfcTaskTimeRecurring*;
using IfcTaskType = internal::IfcTaskType*;
using IfcTelecomAddress = internal::IfcTelecomAddress*;
using IfcTendon = internal::IfcTendon*;
using IfcTendonAnchor = internal::IfcTendonAnchor*;
using IfcTendonAnchorType = internal::IfcTendonAnchorType*;
using IfcTendonType = internal::IfcTendonType*;
using IfcTessellatedFaceSet = internal::IfcTessellatedFaceSet*;
using IfcTessellatedItem = internal::IfcTessellatedItem*;
using IfcTextLiteral = internal::IfcTextLiteral*;
using IfcTextLiteralWithExtent = internal::IfcTextLiteralWithExtent*;
using IfcTextStyle = internal::IfcTextStyle*;
using IfcTextStyleFontModel = internal::IfcTextStyleFontModel*;
using IfcTextStyleForDefinedFont = internal::IfcTextStyleForDefinedFont*;
using IfcTextStyleTextModel = internal::IfcTextStyleTextModel*;
using IfcTextureCoordinate = internal::IfcTextureCoordinate*;
using IfcTextureCoordinateGenerator = internal::IfcTextureCoordinateGenerator*;
using IfcTextureMap = internal::IfcTextureMap*;
using IfcTextureVertex = internal::IfcTextureVertex*;
using IfcTextureVertexList = internal::IfcTextureVertexList*;
using IfcTimePeriod = internal::IfcTimePeriod*;
using IfcTimeSeries = internal::IfcTimeSeries*;
using IfcTimeSeriesValue = internal::IfcTimeSeriesValue*;
using IfcTopologicalRepresentationItem = internal::IfcTopologicalRepresentationItem*;
using IfcTopologyRepresentation = internal::IfcTopologyRepresentation*;
using IfcToroidalSurface = internal::IfcToroidalSurface*;
using IfcTransformer = internal::IfcTransformer*;
using IfcTransformerType = internal::IfcTransformerType*;
using IfcTransitionCurveSegment2D = internal::IfcTransitionCurveSegment2D*;
using IfcTransportElement = internal::IfcTransportElement*;
using IfcTransportElementType = internal::IfcTransportElementType*;
using IfcTrapeziumProfileDef = internal::IfcTrapeziumProfileDef*;
using IfcTriangulatedFaceSet = internal::IfcTriangulatedFaceSet*;
using IfcTriangulatedIrregularNetwork = internal::IfcTriangulatedIrregularNetwork*;
using IfcTrimmedCurve = internal::IfcTrimmedCurve*;
using IfcTubeBundle = internal::IfcTubeBundle*;
using IfcTubeBundleType = internal::IfcTubeBundleType*;
using IfcTypeObject = internal::IfcTypeObject*;
using IfcTypeProcess = internal::IfcTypeProcess*;
using IfcTypeProduct = internal::IfcTypeProduct*;
using IfcTypeResource = internal::IfcTypeResource*;
using IfcUShapeProfileDef = internal::IfcUShapeProfileDef*;
using IfcUnitAssignment = internal::IfcUnitAssignment*;
using IfcUnitaryControlElement = internal::IfcUnitaryControlElement*;
using IfcUnitaryControlElementType = internal::IfcUnitaryControlElementType*;
using IfcUnitaryEquipment = internal::IfcUnitaryEquipment*;
using IfcUnitaryEquipmentType = internal::IfcUnitaryEquipmentType*;
using IfcValve = internal::IfcValve*;
using IfcValveType = internal::IfcValveType*;
using IfcVector = internal::IfcVector*;
using IfcVertex = internal::IfcVertex*;
using IfcVertexLoop = internal::IfcVertexLoop*;
using IfcVertexPoint = internal::IfcVertexPoint*;
using IfcVibrationIsolator = internal::IfcVibrationIsolator*;
using IfcVibrationIsolatorType = internal::IfcVibrationIsolatorType*;
using IfcVirtualElement = internal::IfcVirtualElement*;
using IfcVirtualGridIntersection = internal::IfcVirtualGridIntersection*;
using IfcVoidingFeature = internal::IfcVoidingFeature*;
using IfcWall = internal::IfcWall*;
using IfcWallElementedCase = internal::IfcWallElementedCase*;
using IfcWallStandardCase = internal::IfcWallStandardCase*;
using IfcWallType = internal::IfcWallType*;
using IfcWasteTerminal = internal::IfcWasteTerminal*;
using IfcWasteTerminalType = internal::IfcWasteTerminalType*;
using IfcWindow = internal::IfcWindow*;
using IfcWindowLiningProperties = internal::IfcWindowLiningProperties*;
using IfcWindowPanelProperties = internal::IfcWindowPanelProperties*;
using IfcWindowStandardCase = internal::IfcWindowStandardCase*;
using IfcWindowStyle = internal::IfcWindowStyle*;
using IfcWindowType = internal::IfcWindowType*;
using IfcWorkCalendar = internal::IfcWorkCalendar*;
using IfcWorkControl = internal::IfcWorkControl*;
using IfcWorkPlan = internal::IfcWorkPlan*;
using IfcWorkSchedule = internal::IfcWorkSchedule*;
using IfcWorkTime = internal::IfcWorkTime*;
using IfcZShapeProfileDef = internal::IfcZShapeProfileDef*;
using IfcZone = internal::IfcZone*;

} // namespace ifc

#endif // IMPORT_IFC_EXTERNAL_POINTERS_H_
